package DataStructuresUse.Maps.TreeMap;

import java.util.TreeMap;

public class _TreeMap {
    public static void treeMap(){
        TreeMap<String, Integer> ages = new TreeMap<>();

        ages.put("علي", 30);
        ages.put("خالد", 25);
        ages.put("فهد", 35);

        // طباعة العناصر (ستكون مرتبة أبجديًا حسب الاسم)
        for (String name : ages.keySet()) {
            System.out.println(name + ": " + ages.get(name));
        }
        /*
        في المثال أعلاه:

قمنا بإنشاء TreeMap لتخزين أسماء الأشخاص وأعمارهم.
أضفنا عناصر إلى TreeMap.
استخدمنا keySet() للحصول على مجموعة مفاتيح مرتبة، ثم استخدمنا get() للحصول على القيم المقترنة بكل مفتاح.
         */

    }
}
/*
TreeMap في جافا هي بنية بيانات تستخدم لتخزين أزواج من المفتاح والقيمة (key-value pairs) حيث يتم ترتيب هذه الأزواج بناءً على قيمة المفتاح بشكل تصاعدي. بمعنى آخر، هي نسخة مرتبة من HashMap.

لماذا نستخدم TreeMap؟
الترتيب التلقائي: يتم ترتيب العناصر في TreeMap تلقائيًا بناءً على قيمة المفتاح، مما يسهل عمليات البحث والتصفية.
الوصول السريع: يمكن الوصول إلى عنصر بناءً على مفتاحه بسرعة باستخدام خوارزميات البحث الثنائية.
الفرادة: لا يسمح بتكرار المفاتيح.
العمليات على مجموعة مرتبة: يمكن إجراء عمليات مثل الحصول على أصغر أو أكبر عنصر، أو الحصول على مجموعة فرعية من العناصر بناءً على نطاق معين.
كيف تعمل TreeMap؟
TreeMap تستخدم شجرة بحث ثنائية (Binary Search Tree) لتنظيم العناصر. يتم مقارنة كل مفتاح جديد بالمفاتيح الموجودة في الشجرة لتحديد مكانه الصحيح.


 مقارنة بين TreeMap و HashMap:
الميزة	HashMap	TreeMap
الترتيب	غير مرتب	مرتب حسب المفتاح
الفرادة	لا يسمح بتكرار المفاتيح	لا يسمح بتكرار المفاتيح
الأداء	أسرع بشكل عام	أبطأ قليلاً من HashMap ولكن يوفر ترتيبًا
الاستخدامات	عندما لا يهم الترتيب	عندما تحتاج إلى ترتيب طبيعي للبيانات أو عمليات بحث متكررة


متى نستخدم TreeMap؟
البيانات المرتبة: عندما نحتاج إلى مجموعة مرتبة بشكل طبيعي (مثل الأعداد، الأحرف الأبجدية).
البيانات الفريدة: عندما نريد ضمان عدم وجود عناصر مكررة.
عمليات البحث المتكررة: إذا كنا سنقوم بعمليات بحث متكررة في المجموعة، فإن TreeMap تكون فعالة بسبب الترتيب.
الحصول على أصغر أو أكبر عنصر: يمكن استخدام TreeMap للحصول بسهولة على أصغر أو أكبر عنصر بناءً على المفتاح.
خلاصة
TreeMap هي أداة قوية في جافا لتخزين مجموعات مرتبة من الأزواج المفتاح-القيمة. إنها مفيدة بشكل خاص عندما تحتاج إلى ترتيب طبيعي للبيانات أو عندما تحتاج إلى إجراء عمليات بحث متكررة.
*/
